{"version":3,"file":"thingjs-mqtt-0.2.0.min.js","sources":["thingjs-agent-0.2.0/transport/Mqtt.js"],"names":["$thing","usePaho","mqtt","require","agent","setup","cb","this","$super","port","reconnectPeriod","isConnecting","isConnected","actuatorsTotal","topicRefs","pendingSubs","pendingUnsubs","z","self","searchMeta","value","host","clientId","undefined","Error","replace","c","Math","floor","random","toString","$id","charAt","destroy","$cb","getChildren","forEach","child","isAbstract","matchInterface","$owner","removeBehaviour","addBehaviour","doConnect","obj","apply","arguments","subTopic","getName","doSubscribe","flow","getFlow","pubTopic","concat","message","doSendMessage","objs","doUnsubscribe","isActive","doDisconnect","doConnectWithMqtt","client","connect","on","err","onError","onDisconnect","broker","onConnect","topic","onMessageArrived","createBuffer","doConnectWithPaho","Paho","MQTT","Client","onConnectionLost","msg","destinationName","payloadBytes","onMessageDelivered","onSuccess","onFailure","i","j","k","disconnect","end","doReconnect","wake","subscribe","unsubscribe","send","publish","errorCode"],"mappings":"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","sourcesContent":["/*\nCopyright (c) 2015 Simon Cullen, http://github.com/cullens\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n'use strict';\n\nif (!$thing.usePaho)\n    var mqtt = require('mqtt');\n\n$thing.agent('abstract Mqtt implements Container', {\n\n    setup: function(cb) {\n        this.$super(cb);\n\n        if ($thing.usePaho)\n            this.port = 80;\n        else\n            this.port = 1883;\n\n        this.reconnectPeriod = 1000;\n\n        this.isConnecting = false;\n        this.isConnected = false;\n\n        this.actuatorsTotal = 0;\n\n        this.topicRefs = {};\n        this.pendingSubs = {};\n        this.pendingUnsubs = {};\n\n        var z = -1,\n            self = this\n            ;\n\n        $thing.searchMeta(this, 'host', 'string', function(value) {\n            self.host = value;\n        });\n\n        $thing.searchMeta(this, 'port', 'int', function(value) {\n            self.port = value;\n        });\n\n        $thing.searchMeta(this, 'clientId', 'string', function(value) {\n            self.clientId = value;\n        });\n\n        $thing.searchMeta(this, 'reconnectPeriod', 'int', function(value) {\n            self.reconnectPeriod = value;\n        });\n\n        if (this.host === undefined)\n            throw new Error('Mqtt: Missing @host');\n \n        if (this.clientId === undefined)\n            this.clientId = 'xxxxxxxx-xxxx-4xxz-yzzz-zzzzzzzzzzzz'.replace(\n                /[xyz4-]/g, \n                function(c) {\n                    switch(c) {\n                        case 'x':\n                            return (\n                                Math.floor(Math.random() * 100) % 16\n                            ).toString(16);\n                        case 'y':\n                            return '8';\n                        case 'z':\n                            return self.$id.charAt(++z);\n                        case '-':\n                        case '4':\n                            return c;\n                    }\n                }\n            );\n\n    },\n    \n    destroy: function($cb) {\n        this.getChildren().forEach(function(child) {\n            if (!child.isAbstract())\n                if (child.matchInterface('Sensor') !== undefined ||\n                    child.matchInterface('Actuator') !== undefined\n                )\n                    child.$owner.removeBehaviour(child);\n        });\n\n        $cb();\n    },\n\n    addBehaviour: function() {\n        var doConnect = false,\n            obj = this.$super.apply(this, arguments)\n            ;\n        \n        if (obj !== undefined && !obj.isAbstract()) {\n \n            if (obj.matchInterface('Sensor') !== undefined) {\n                obj.subTopic = obj.getName();\n\n            if (this.topicRefs[obj.subTopic] !== undefined)\n                this.topicRefs[obj.subTopic]++;\n            else {\n                this.topicRefs[obj.subTopic] = 1;\n\n                if (this.isConnected)\n                    this.doSubscribe(obj.subTopic);\n                else {\n                    this.pendingSubs[obj.subTopic] = true;\n\n                    if (this.pendingUnsubs[obj.subTopic] !== undefined)\n                        delete this.pendingUnsubs[obj.subTopic];\n\n                        doConnect = true;\n                    }\n                }\n            }\n                \n            if (obj.matchInterface('Actuator') !== undefined) {\n                var flow = obj.getFlow();\n                \n                obj.pubTopic = obj.getName();\n\n                obj.getFlow = function() {\n                    return flow.concat([\n                        function(message, cb) {\n                            obj.$owner.doSendMessage(obj.pubTopic, message);\n                            cb();\n                        }\n                    ]);\n                };\n\n                if (!this.isConnected) {\n                    doConnect = true;\n                    $thing.agent(obj)('pause')();\n                }\n\n                this.actuatorsTotal++;\n            }\n            \n            if (doConnect)\n                this.doConnect();\n\n        }\n            \n        return obj;\n    },\n\n    removeBehaviour: function() {\n        var self = this,\n            objs = this.$super.apply(this, arguments)\n            ;\n            \n        objs.forEach(function(obj) {\n\n            if (obj.subTopic !== undefined)\n                if (--self.topicRefs[obj.subTopic] <= 0) {\n                    delete self.topicRefs[obj.subTopic];\n\n                    if (self.pendingSubs[obj.subTopic] !== undefined)\n                        delete self.pendingSubs[obj.subTopic];\n\n                    if (self.isConnected)\n                        self.doUnsubscribe(obj.subTopic);\n                    else\n                        self.pendingUnsubs[obj.subTopic] = true;\n                }\n                \n            if (obj.pubTopic !== undefined)\n                self.actuatorsTotal--;\n\n        });\n\n        if (!this.isActive())\n            this.doDisconnect();\n\n        return objs;\n    },\n\n    doConnectWithMqtt: function() {\n        var self = this;\n\n        this.client = mqtt.connect({\n            host: this.host,\n            port: this.port,\n            clientId: this.clientId,\n            reconnectPeriod: this.reconnectPeriod\n        });\n\n        this.client.on('error', function(err) {\n            self.onError(err)();\n        });\n\n        this.client.on('close', function() {\n            self.onDisconnect();\n            self.removeBehaviour(self.broker);\n            delete self.broker;\n        });\n\n        this.client.on('connect', function() {\n            self.broker = self.addBehaviour('@passive', {});\n            self.onConnect();\n        });\n\n        this.client.on('message', function(topic, message) {\n            self.onMessageArrived(\n                topic, \n                $thing.createBuffer(message)\n            );\n        });\n\n    },\n\n    doConnectWithPaho: function() {\n        var self = this;\n\n        this.client = new Paho.MQTT.Client(\n            this.host, \n            this.port, \n            this.clientId\n        );\n\n        this.client.onConnectionLost = function() {\n            self.onDisconnect();\n        };\n                    \n        this.client.onMessageArrived = function(msg) {\n            self.onMessageArrived(\n                msg.destinationName, \n                $thing.createBuffer(msg.payloadBytes)\n            );\n        };\n            \n        this.client.onMessageDelivered = function(msg) {\n            self.onMessageDelivered(\n                msg.destinationName, \n                $thing.createBuffer(msg.payloadBytes)\n            );\n        };\n\n        this.client.connect({\n            onSuccess: function() {\n                self.onConnect();\n            },\n            onFailure: function(err) {\n                self.onError(err);\n            }\n        });\n    },\n\n    isActive: function() {\n        for (var i in this.pendingSubs)\n            break;        \n        for (var j in this.pendingUnsubs)\n            break;\n        for (var k in this.topicRefs)\n            break;\n        if (    i !== undefined || \n                j !== undefined || \n                k !== undefined || \n                this.actuatorsTotal > 0\n        )  \n            return true;\n        else\n            return false;\n    },\n\n    doConnect: function() {\n        if (this.isConnecting) \n            return;\n\n        this.isConnecting = true;\n        this.isConnected = false;\n\n        if ($thing.usePaho)\n            this.doConnectWithPaho();\n        else\n            this.doConnectWithMqtt();\n    },\n\n    doDisconnect: function() {\n        if (this.client !== undefined) {\n\n            this.isConnecting = false;\n            this.isConnected = false;\n\n            if ($thing.usePaho)\n                this.client.disconnect();\n            else\n                this.client.end();\n\n            delete this.client;\n        }\n    },\n\n    doReconnect: function() {\n        if ($thing.usePaho)\n            this.addBehaviour(\n                '@singleton',\n                '@period $', this.reconnectPeriod,\n                'extends Waker', {\n                    wake: function(cb) {\n                        this.$super(cb);\n\n                        if (this.$owner.isConnected)\n                            this.$owner.doDisconnect();\n                        else\n                            this.$owner.doConnect();\n                    }\n                }\n            );\n    },\n\n    doSubscribe: function(topic) {\n        this.client.subscribe(topic);\n    },\n\n    doUnsubscribe: function(topic) {\n        this.client.unsubscribe(topic);\n    },\n\n    doSendMessage: function(topic, message) {\n        var self = this;\n\n        if ($thing.usePaho)\n            this.client.send(topic, message, 0, false);\n        else \n            this.client.publish(\n                topic,\n                message, {\n\n                },\n                function(err) {\n                    if (err) \n                        self.onError(err);\n                    else \n                        self.onMessageDelivered(\n                            topic, \n                            $thing.createBuffer(message)\n                        );\n                }\n            );\n    },\n\n    onError: function(err) {\n        this.isConnecting = false;\n\n        if ($thing.usePaho && err.errorCode === 8)\n            this.onDisconnect();\n    },\n\n    onConnect: function() {\n        this.isConnecting = false;\n        this.isConnected = true;\n\n        for (var i in this.pendingSubs)\n            this.doSubscribe(i);\n\n        for (var j in this.pendingUnsubs)\n            this.doUnsubscribe(j);\n\n        this.pendingSubs = {};\n        this.pendingUnsubs = {};\n\n        for (var k in this.topicRefs)\n            break;\n        if (k === undefined && this.actuatorsTotal <= 0) \n            this.doDisconnect();\n        else\n            this.getChildren().forEach(function(obj) {\n                if (!obj.isAbstract() && \n                    obj.matchInterface('Actuator') !== undefined\n                )       \n                    $thing.agent(obj)('resume')();\n            });\n    },\n\n    onDisconnect: function() {\n        this.isConnecting = false;\n        this.isConnected = false;\n\n        if (this.actuatorsTotal > 0)\n            this.getChildren().forEach(function(obj) {\n                if (obj.matchInterface('Actuator') !== undefined)\n                    $thing.agent(obj)('pause')();\n            });\n\n        if (this.isActive())\n            this.doReconnect();\n    },\n\n    onMessageArrived: function(topic, message) {\n\n        this.getChildren().forEach(function(obj) {\n            if (!obj.isAbstract() && obj.matchInterface(topic) !== undefined)\n                    \n                if (obj.matchInterface('Bridge') !== undefined)\n                    $thing.agent('@select $ not owner:$', topic, obj.$owner.$id)\n                        ('push', message)()\n                        ;\n\n                else if (obj.matchInterface('Sensor') !== undefined)\n                    $thing.agent(obj)\n                        ('push', message)()\n                        ;\n        });\n\n    },\n\n    onMessageDelivered: function(topic, message) {\n\n    }\n\n});"]}