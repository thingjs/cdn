{"version":3,"file":"thingjs-agent-0.1.1-withasync.min.js","sources":["async-0.9.0.js","thingjs-agent-0.1.1.js"],"names":["only_once","fn","called","Error","apply","root","arguments","previous_async","async","this","noConflict","_toString","Object","prototype","toString","_isArray","Array","isArray","obj","call","_each","arr","iterator","forEach","i","length","_map","map","results","x","a","push","_reduce","memo","reduce","_keys","keys","k","hasOwnProperty","process","nextTick","setImmediate","setTimeout","each","callback","done","err","completed","eachSeries","iterate","forEachSeries","eachLimit","limit","_eachLimit","forEachLimit","started","running","replenish","doParallel","args","slice","concat","doParallelLimit","doSeries","_asyncMap","eachfn","index","value","v","mapSeries","mapLimit","_mapLimit","inject","foldl","reduceRight","reversed","reverse","foldr","_filter","sort","b","filter","filterSeries","select","selectSeries","_reject","reject","rejectSeries","_detect","main_callback","result","detect","detectSeries","some","any","every","all","sortBy","criteria","left","right","auto","tasks","remainingTasks","listeners","addListener","unshift","removeListener","splice","taskComplete","theCallback","task","taskCallback","safeResults","rkey","requires","Math","abs","ready","listener","retry","times","DEFAULT_TIMES","attempts","parseInt","wrappedTask","wrappedCallback","wrappedResults","retryAttempt","finalAttempt","seriesCallback","series","data","waterfall","wrapIterator","next","_parallel","parallel","parallelLimit","makeCallback","_concat","r","cb","y","concatSeries","whilst","test","doWhilst","until","doUntil","queue","worker","concurrency","_insert","q","pos","drain","item","saturated","undefined","workers","empty","paused","kill","shift","idle","pause","resume","priorityQueue","_compareTasks","priority","_binarySearch","sequence","compare","beg","end","mid","cargo","payload","working","drained","ts","ds","_console_fn","name","console","error","log","dir","memoize","hasher","queues","memoized","pop","key","l","unmemoized","unmemoize","count","counter","timesSeries","seq","fns","that","newargs","nextargs","compose","_applyEach","go","applyEach","applyEachSeries","forever","module","exports","define","amd","_global","Mash","n","mash","charCodeAt","h","cbBuilder","self","cbDone","agent","cbObj","$thing","Container","_getMicroTime","_module","require","GLOBAL","hrTime","hrtime","floor","Date","now","heap","create64BitId","h1","h2","split","getBacktrace","first","e","trace","stack","match","merge","attach","def","_id","_refCount","search","searchMeta","predicate","type","meta","getMeta","_meta","isNaN","toLowerCase","switchContext","functString","parentOrdinal","superOrdinal","ordinal","superName","methodName","$vtable","indexOf","ret","$parent","$super","switchParentContext","getName","$inherit","inherit","parent","init","replace","j","signature","signatures","constructor","substring","$owner","$signatures","Base","property","prop","cbGetter","cbSetter","get","set","defineProperty","bind","funct","State","EXPR_AND","EXPR_NOT","EXPR_OR","DEF_DESC","DEF_NAME","DEF_SOURCE","DEF_EXTENDS","DEF_IMPLEMENTS","DEF_USES","DEF_META","DEF_NOP","DEF_END","LIFE_INITIATED","LIFE_ACTIVE","LIFE_WAITING","LIFE_SUSPENDED","LIFE_DELETED","LIFE_TRANSIT","LIFE_BLOCKED","Filter","ALL","FIRST","LAST","Definition","_metaHandlers","mobile","_isMobile","passive","_isPassive","singleton","_singleton","_source","catchall","_substitute","$__catchall__","_super","source","_state","_parent","_children","_interfaces","_uses","_isAgent","Agent","_isAbstract","$id","$source","parseStack","_extends","_name","_class","refObject","_instance","_childrenWrapper","_pushChild","_forEachChild","_countChildren","_factory","interfaces","getInterfaces","getHeapId","id","child","getRefCount","charAt","Boolean","RegExp","patchObject","getSource","getChildren","getState","setState","states","state","unsetState","isAbstract","unpatchObject","cbRelease","constructed","setup","takedown","Delegate","matchInterface","pattern","dispatch","method","Pattern","_pattern","toArray","doActivate","doDelete","doSuspend","doWait","doWake","addBehaviour","reset","Behaviour","refCount","instance","removeBehaviour","objs","children","action","$cb","block","restart","Selector","includePassive","include","_exprs","_selection","_callbacks","expr","and","not","isPassive","matchObject","m","cbItem","filters","interface","cbNext","release","WAKE_MIN_PERIOD","nextWakeTime","isActionTaskQueued","wakeTask","selector","enqueueActionTask","selects","callChain","callArgs","last","keepAlive","intervalId","setInterval","destroy","clearInterval","catchAll","getFlow","methods","names","cbYield","yield","getQueue","functs","active","flow","items","errs","getWakeTime","time","period","wake","stop"],"mappings":"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","sourcesContent":["/*!\n * async\n * https://github.com/caolan/async\n *\n * Copyright 2010-2014 Caolan McMahon\n * Released under the MIT license\n */\n/*jshint onevar: false, indent:4 */\n/*global setImmediate: false, setTimeout: false, console: false */\n(function () {\n\n    var async = {};\n\n    // global on the server, window in the browser\n    var root, previous_async;\n\n    root = this;\n    if (root != null) {\n      previous_async = root.async;\n    }\n\n    async.noConflict = function () {\n        root.async = previous_async;\n        return async;\n    };\n\n    function only_once(fn) {\n        var called = false;\n        return function() {\n            if (called) throw new Error(\"Callback was already called.\");\n            called = true;\n            fn.apply(root, arguments);\n        }\n    }\n\n    //// cross-browser compatiblity functions ////\n\n    var _toString = Object.prototype.toString;\n\n    var _isArray = Array.isArray || function (obj) {\n        return _toString.call(obj) === '[object Array]';\n    };\n\n    var _each = function (arr, iterator) {\n        if (arr.forEach) {\n            return arr.forEach(iterator);\n        }\n        for (var i = 0; i < arr.length; i += 1) {\n            iterator(arr[i], i, arr);\n        }\n    };\n\n    var _map = function (arr, iterator) {\n        if (arr.map) {\n            return arr.map(iterator);\n        }\n        var results = [];\n        _each(arr, function (x, i, a) {\n            results.push(iterator(x, i, a));\n        });\n        return results;\n    };\n\n    var _reduce = function (arr, iterator, memo) {\n        if (arr.reduce) {\n            return arr.reduce(iterator, memo);\n        }\n        _each(arr, function (x, i, a) {\n            memo = iterator(memo, x, i, a);\n        });\n        return memo;\n    };\n\n    var _keys = function (obj) {\n        if (Object.keys) {\n            return Object.keys(obj);\n        }\n        var keys = [];\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                keys.push(k);\n            }\n        }\n        return keys;\n    };\n\n    //// exported async module functions ////\n\n    //// nextTick implementation with browser-compatible fallback ////\n    if (typeof process === 'undefined' || !(process.nextTick)) {\n        if (typeof setImmediate === 'function') {\n            async.nextTick = function (fn) {\n                // not a direct alias for IE10 compatibility\n                setImmediate(fn);\n            };\n            async.setImmediate = async.nextTick;\n        }\n        else {\n            async.nextTick = function (fn) {\n                setTimeout(fn, 0);\n            };\n            async.setImmediate = async.nextTick;\n        }\n    }\n    else {\n        async.nextTick = process.nextTick;\n        if (typeof setImmediate !== 'undefined') {\n            async.setImmediate = function (fn) {\n              // not a direct alias for IE10 compatibility\n              setImmediate(fn);\n            };\n        }\n        else {\n            async.setImmediate = async.nextTick;\n        }\n    }\n\n    async.each = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        _each(arr, function (x) {\n            iterator(x, only_once(done) );\n        });\n        function done(err) {\n          if (err) {\n              callback(err);\n              callback = function () {};\n          }\n          else {\n              completed += 1;\n              if (completed >= arr.length) {\n                  callback();\n              }\n          }\n        }\n    };\n    async.forEach = async.each;\n\n    async.eachSeries = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        var iterate = function () {\n            iterator(arr[completed], function (err) {\n                if (err) {\n                    callback(err);\n                    callback = function () {};\n                }\n                else {\n                    completed += 1;\n                    if (completed >= arr.length) {\n                        callback();\n                    }\n                    else {\n                        iterate();\n                    }\n                }\n            });\n        };\n        iterate();\n    };\n    async.forEachSeries = async.eachSeries;\n\n    async.eachLimit = function (arr, limit, iterator, callback) {\n        var fn = _eachLimit(limit);\n        fn.apply(null, [arr, iterator, callback]);\n    };\n    async.forEachLimit = async.eachLimit;\n\n    var _eachLimit = function (limit) {\n\n        return function (arr, iterator, callback) {\n            callback = callback || function () {};\n            if (!arr.length || limit <= 0) {\n                return callback();\n            }\n            var completed = 0;\n            var started = 0;\n            var running = 0;\n\n            (function replenish () {\n                if (completed >= arr.length) {\n                    return callback();\n                }\n\n                while (running < limit && started < arr.length) {\n                    started += 1;\n                    running += 1;\n                    iterator(arr[started - 1], function (err) {\n                        if (err) {\n                            callback(err);\n                            callback = function () {};\n                        }\n                        else {\n                            completed += 1;\n                            running -= 1;\n                            if (completed >= arr.length) {\n                                callback();\n                            }\n                            else {\n                                replenish();\n                            }\n                        }\n                    });\n                }\n            })();\n        };\n    };\n\n\n    var doParallel = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.each].concat(args));\n        };\n    };\n    var doParallelLimit = function(limit, fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [_eachLimit(limit)].concat(args));\n        };\n    };\n    var doSeries = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.eachSeries].concat(args));\n        };\n    };\n\n\n    var _asyncMap = function (eachfn, arr, iterator, callback) {\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        if (!callback) {\n            eachfn(arr, function (x, callback) {\n                iterator(x.value, function (err) {\n                    callback(err);\n                });\n            });\n        } else {\n            var results = [];\n            eachfn(arr, function (x, callback) {\n                iterator(x.value, function (err, v) {\n                    results[x.index] = v;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n    async.map = doParallel(_asyncMap);\n    async.mapSeries = doSeries(_asyncMap);\n    async.mapLimit = function (arr, limit, iterator, callback) {\n        return _mapLimit(limit)(arr, iterator, callback);\n    };\n\n    var _mapLimit = function(limit) {\n        return doParallelLimit(limit, _asyncMap);\n    };\n\n    // reduce only has a series version, as doing reduce in parallel won't\n    // work in many situations.\n    async.reduce = function (arr, memo, iterator, callback) {\n        async.eachSeries(arr, function (x, callback) {\n            iterator(memo, x, function (err, v) {\n                memo = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, memo);\n        });\n    };\n    // inject alias\n    async.inject = async.reduce;\n    // foldl alias\n    async.foldl = async.reduce;\n\n    async.reduceRight = function (arr, memo, iterator, callback) {\n        var reversed = _map(arr, function (x) {\n            return x;\n        }).reverse();\n        async.reduce(reversed, memo, iterator, callback);\n    };\n    // foldr alias\n    async.foldr = async.reduceRight;\n\n    var _filter = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.filter = doParallel(_filter);\n    async.filterSeries = doSeries(_filter);\n    // select alias\n    async.select = async.filter;\n    async.selectSeries = async.filterSeries;\n\n    var _reject = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (!v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.reject = doParallel(_reject);\n    async.rejectSeries = doSeries(_reject);\n\n    var _detect = function (eachfn, arr, iterator, main_callback) {\n        eachfn(arr, function (x, callback) {\n            iterator(x, function (result) {\n                if (result) {\n                    main_callback(x);\n                    main_callback = function () {};\n                }\n                else {\n                    callback();\n                }\n            });\n        }, function (err) {\n            main_callback();\n        });\n    };\n    async.detect = doParallel(_detect);\n    async.detectSeries = doSeries(_detect);\n\n    async.some = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (v) {\n                    main_callback(true);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(false);\n        });\n    };\n    // any alias\n    async.any = async.some;\n\n    async.every = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (!v) {\n                    main_callback(false);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(true);\n        });\n    };\n    // all alias\n    async.all = async.every;\n\n    async.sortBy = function (arr, iterator, callback) {\n        async.map(arr, function (x, callback) {\n            iterator(x, function (err, criteria) {\n                if (err) {\n                    callback(err);\n                }\n                else {\n                    callback(null, {value: x, criteria: criteria});\n                }\n            });\n        }, function (err, results) {\n            if (err) {\n                return callback(err);\n            }\n            else {\n                var fn = function (left, right) {\n                    var a = left.criteria, b = right.criteria;\n                    return a < b ? -1 : a > b ? 1 : 0;\n                };\n                callback(null, _map(results.sort(fn), function (x) {\n                    return x.value;\n                }));\n            }\n        });\n    };\n\n    async.auto = function (tasks, callback) {\n        callback = callback || function () {};\n        var keys = _keys(tasks);\n        var remainingTasks = keys.length\n        if (!remainingTasks) {\n            return callback();\n        }\n\n        var results = {};\n\n        var listeners = [];\n        var addListener = function (fn) {\n            listeners.unshift(fn);\n        };\n        var removeListener = function (fn) {\n            for (var i = 0; i < listeners.length; i += 1) {\n                if (listeners[i] === fn) {\n                    listeners.splice(i, 1);\n                    return;\n                }\n            }\n        };\n        var taskComplete = function () {\n            remainingTasks--\n            _each(listeners.slice(0), function (fn) {\n                fn();\n            });\n        };\n\n        addListener(function () {\n            if (!remainingTasks) {\n                var theCallback = callback;\n                // prevent final callback from calling itself if it errors\n                callback = function () {};\n\n                theCallback(null, results);\n            }\n        });\n\n        _each(keys, function (k) {\n            var task = _isArray(tasks[k]) ? tasks[k]: [tasks[k]];\n            var taskCallback = function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (args.length <= 1) {\n                    args = args[0];\n                }\n                if (err) {\n                    var safeResults = {};\n                    _each(_keys(results), function(rkey) {\n                        safeResults[rkey] = results[rkey];\n                    });\n                    safeResults[k] = args;\n                    callback(err, safeResults);\n                    // stop subsequent errors hitting callback multiple times\n                    callback = function () {};\n                }\n                else {\n                    results[k] = args;\n                    async.setImmediate(taskComplete);\n                }\n            };\n            var requires = task.slice(0, Math.abs(task.length - 1)) || [];\n            var ready = function () {\n                return _reduce(requires, function (a, x) {\n                    return (a && results.hasOwnProperty(x));\n                }, true) && !results.hasOwnProperty(k);\n            };\n            if (ready()) {\n                task[task.length - 1](taskCallback, results);\n            }\n            else {\n                var listener = function () {\n                    if (ready()) {\n                        removeListener(listener);\n                        task[task.length - 1](taskCallback, results);\n                    }\n                };\n                addListener(listener);\n            }\n        });\n    };\n\n    async.retry = function(times, task, callback) {\n        var DEFAULT_TIMES = 5;\n        var attempts = [];\n        // Use defaults if times not passed\n        if (typeof times === 'function') {\n            callback = task;\n            task = times;\n            times = DEFAULT_TIMES;\n        }\n        // Make sure times is a number\n        times = parseInt(times, 10) || DEFAULT_TIMES;\n        var wrappedTask = function(wrappedCallback, wrappedResults) {\n            var retryAttempt = function(task, finalAttempt) {\n                return function(seriesCallback) {\n                    task(function(err, result){\n                        seriesCallback(!err || finalAttempt, {err: err, result: result});\n                    }, wrappedResults);\n                };\n            };\n            while (times) {\n                attempts.push(retryAttempt(task, !(times-=1)));\n            }\n            async.series(attempts, function(done, data){\n                data = data[data.length - 1];\n                (wrappedCallback || callback)(data.err, data.result);\n            });\n        }\n        // If a callback is passed, run this as a controll flow\n        return callback ? wrappedTask() : wrappedTask\n    };\n\n    async.waterfall = function (tasks, callback) {\n        callback = callback || function () {};\n        if (!_isArray(tasks)) {\n          var err = new Error('First argument to waterfall must be an array of functions');\n          return callback(err);\n        }\n        if (!tasks.length) {\n            return callback();\n        }\n        var wrapIterator = function (iterator) {\n            return function (err) {\n                if (err) {\n                    callback.apply(null, arguments);\n                    callback = function () {};\n                }\n                else {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    var next = iterator.next();\n                    if (next) {\n                        args.push(wrapIterator(next));\n                    }\n                    else {\n                        args.push(callback);\n                    }\n                    async.setImmediate(function () {\n                        iterator.apply(null, args);\n                    });\n                }\n            };\n        };\n        wrapIterator(async.iterator(tasks))();\n    };\n\n    var _parallel = function(eachfn, tasks, callback) {\n        callback = callback || function () {};\n        if (_isArray(tasks)) {\n            eachfn.map(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            eachfn.each(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.parallel = function (tasks, callback) {\n        _parallel({ map: async.map, each: async.each }, tasks, callback);\n    };\n\n    async.parallelLimit = function(tasks, limit, callback) {\n        _parallel({ map: _mapLimit(limit), each: _eachLimit(limit) }, tasks, callback);\n    };\n\n    async.series = function (tasks, callback) {\n        callback = callback || function () {};\n        if (_isArray(tasks)) {\n            async.mapSeries(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            async.eachSeries(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.iterator = function (tasks) {\n        var makeCallback = function (index) {\n            var fn = function () {\n                if (tasks.length) {\n                    tasks[index].apply(null, arguments);\n                }\n                return fn.next();\n            };\n            fn.next = function () {\n                return (index < tasks.length - 1) ? makeCallback(index + 1): null;\n            };\n            return fn;\n        };\n        return makeCallback(0);\n    };\n\n    async.apply = function (fn) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return function () {\n            return fn.apply(\n                null, args.concat(Array.prototype.slice.call(arguments))\n            );\n        };\n    };\n\n    var _concat = function (eachfn, arr, fn, callback) {\n        var r = [];\n        eachfn(arr, function (x, cb) {\n            fn(x, function (err, y) {\n                r = r.concat(y || []);\n                cb(err);\n            });\n        }, function (err) {\n            callback(err, r);\n        });\n    };\n    async.concat = doParallel(_concat);\n    async.concatSeries = doSeries(_concat);\n\n    async.whilst = function (test, iterator, callback) {\n        if (test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.whilst(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doWhilst = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            var args = Array.prototype.slice.call(arguments, 1);\n            if (test.apply(null, args)) {\n                async.doWhilst(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.until = function (test, iterator, callback) {\n        if (!test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.until(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doUntil = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            var args = Array.prototype.slice.call(arguments, 1);\n            if (!test.apply(null, args)) {\n                async.doUntil(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.queue = function (worker, concurrency) {\n        if (concurrency === undefined) {\n            concurrency = 1;\n        }\n        function _insert(q, data, pos, callback) {\n          if (!q.started){\n            q.started = true;\n          }\n          if (!_isArray(data)) {\n              data = [data];\n          }\n          if(data.length == 0) {\n             // call drain immediately if there are no tasks\n             return async.setImmediate(function() {\n                 if (q.drain) {\n                     q.drain();\n                 }\n             });\n          }\n          _each(data, function(task) {\n              var item = {\n                  data: task,\n                  callback: typeof callback === 'function' ? callback : null\n              };\n\n              if (pos) {\n                q.tasks.unshift(item);\n              } else {\n                q.tasks.push(item);\n              }\n\n              if (q.saturated && q.tasks.length === q.concurrency) {\n                  q.saturated();\n              }\n              async.setImmediate(q.process);\n          });\n        }\n\n        var workers = 0;\n        var q = {\n            tasks: [],\n            concurrency: concurrency,\n            saturated: null,\n            empty: null,\n            drain: null,\n            started: false,\n            paused: false,\n            push: function (data, callback) {\n              _insert(q, data, false, callback);\n            },\n            kill: function () {\n              q.drain = null;\n              q.tasks = [];\n            },\n            unshift: function (data, callback) {\n              _insert(q, data, true, callback);\n            },\n            process: function () {\n                if (!q.paused && workers < q.concurrency && q.tasks.length) {\n                    var task = q.tasks.shift();\n                    if (q.empty && q.tasks.length === 0) {\n                        q.empty();\n                    }\n                    workers += 1;\n                    var next = function () {\n                        workers -= 1;\n                        if (task.callback) {\n                            task.callback.apply(task, arguments);\n                        }\n                        if (q.drain && q.tasks.length + workers === 0) {\n                            q.drain();\n                        }\n                        q.process();\n                    };\n                    var cb = only_once(next);\n                    worker(task.data, cb);\n                }\n            },\n            length: function () {\n                return q.tasks.length;\n            },\n            running: function () {\n                return workers;\n            },\n            idle: function() {\n                return q.tasks.length + workers === 0;\n            },\n            pause: function () {\n                if (q.paused === true) { return; }\n                q.paused = true;\n                q.process();\n            },\n            resume: function () {\n                if (q.paused === false) { return; }\n                q.paused = false;\n                q.process();\n            }\n        };\n        return q;\n    };\n    \n    async.priorityQueue = function (worker, concurrency) {\n        \n        function _compareTasks(a, b){\n          return a.priority - b.priority;\n        };\n        \n        function _binarySearch(sequence, item, compare) {\n          var beg = -1,\n              end = sequence.length - 1;\n          while (beg < end) {\n            var mid = beg + ((end - beg + 1) >>> 1);\n            if (compare(item, sequence[mid]) >= 0) {\n              beg = mid;\n            } else {\n              end = mid - 1;\n            }\n          }\n          return beg;\n        }\n        \n        function _insert(q, data, priority, callback) {\n          if (!q.started){\n            q.started = true;\n          }\n          if (!_isArray(data)) {\n              data = [data];\n          }\n          if(data.length == 0) {\n             // call drain immediately if there are no tasks\n             return async.setImmediate(function() {\n                 if (q.drain) {\n                     q.drain();\n                 }\n             });\n          }\n          _each(data, function(task) {\n              var item = {\n                  data: task,\n                  priority: priority,\n                  callback: typeof callback === 'function' ? callback : null\n              };\n              \n              q.tasks.splice(_binarySearch(q.tasks, item, _compareTasks) + 1, 0, item);\n\n              if (q.saturated && q.tasks.length === q.concurrency) {\n                  q.saturated();\n              }\n              async.setImmediate(q.process);\n          });\n        }\n        \n        // Start with a normal queue\n        var q = async.queue(worker, concurrency);\n        \n        // Override push to accept second parameter representing priority\n        q.push = function (data, priority, callback) {\n          _insert(q, data, priority, callback);\n        };\n        \n        // Remove unshift function\n        delete q.unshift;\n\n        return q;\n    };\n\n    async.cargo = function (worker, payload) {\n        var working     = false,\n            tasks       = [];\n\n        var cargo = {\n            tasks: tasks,\n            payload: payload,\n            saturated: null,\n            empty: null,\n            drain: null,\n            drained: true,\n            push: function (data, callback) {\n                if (!_isArray(data)) {\n                    data = [data];\n                }\n                _each(data, function(task) {\n                    tasks.push({\n                        data: task,\n                        callback: typeof callback === 'function' ? callback : null\n                    });\n                    cargo.drained = false;\n                    if (cargo.saturated && tasks.length === payload) {\n                        cargo.saturated();\n                    }\n                });\n                async.setImmediate(cargo.process);\n            },\n            process: function process() {\n                if (working) return;\n                if (tasks.length === 0) {\n                    if(cargo.drain && !cargo.drained) cargo.drain();\n                    cargo.drained = true;\n                    return;\n                }\n\n                var ts = typeof payload === 'number'\n                            ? tasks.splice(0, payload)\n                            : tasks.splice(0, tasks.length);\n\n                var ds = _map(ts, function (task) {\n                    return task.data;\n                });\n\n                if(cargo.empty) cargo.empty();\n                working = true;\n                worker(ds, function () {\n                    working = false;\n\n                    var args = arguments;\n                    _each(ts, function (data) {\n                        if (data.callback) {\n                            data.callback.apply(null, args);\n                        }\n                    });\n\n                    process();\n                });\n            },\n            length: function () {\n                return tasks.length;\n            },\n            running: function () {\n                return working;\n            }\n        };\n        return cargo;\n    };\n\n    var _console_fn = function (name) {\n        return function (fn) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            fn.apply(null, args.concat([function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (typeof console !== 'undefined') {\n                    if (err) {\n                        if (console.error) {\n                            console.error(err);\n                        }\n                    }\n                    else if (console[name]) {\n                        _each(args, function (x) {\n                            console[name](x);\n                        });\n                    }\n                }\n            }]));\n        };\n    };\n    async.log = _console_fn('log');\n    async.dir = _console_fn('dir');\n    /*async.info = _console_fn('info');\n    async.warn = _console_fn('warn');\n    async.error = _console_fn('error');*/\n\n    async.memoize = function (fn, hasher) {\n        var memo = {};\n        var queues = {};\n        hasher = hasher || function (x) {\n            return x;\n        };\n        var memoized = function () {\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            var key = hasher.apply(null, args);\n            if (key in memo) {\n                async.nextTick(function () {\n                    callback.apply(null, memo[key]);\n                });\n            }\n            else if (key in queues) {\n                queues[key].push(callback);\n            }\n            else {\n                queues[key] = [callback];\n                fn.apply(null, args.concat([function () {\n                    memo[key] = arguments;\n                    var q = queues[key];\n                    delete queues[key];\n                    for (var i = 0, l = q.length; i < l; i++) {\n                      q[i].apply(null, arguments);\n                    }\n                }]));\n            }\n        };\n        memoized.memo = memo;\n        memoized.unmemoized = fn;\n        return memoized;\n    };\n\n    async.unmemoize = function (fn) {\n      return function () {\n        return (fn.unmemoized || fn).apply(null, arguments);\n      };\n    };\n\n    async.times = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.map(counter, iterator, callback);\n    };\n\n    async.timesSeries = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.mapSeries(counter, iterator, callback);\n    };\n\n    async.seq = function (/* functions... */) {\n        var fns = arguments;\n        return function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            async.reduce(fns, args, function (newargs, fn, cb) {\n                fn.apply(that, newargs.concat([function () {\n                    var err = arguments[0];\n                    var nextargs = Array.prototype.slice.call(arguments, 1);\n                    cb(err, nextargs);\n                }]))\n            },\n            function (err, results) {\n                callback.apply(that, [err].concat(results));\n            });\n        };\n    };\n\n    async.compose = function (/* functions... */) {\n      return async.seq.apply(null, Array.prototype.reverse.call(arguments));\n    };\n\n    var _applyEach = function (eachfn, fns /*args...*/) {\n        var go = function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            return eachfn(fns, function (fn, cb) {\n                fn.apply(that, args.concat([cb]));\n            },\n            callback);\n        };\n        if (arguments.length > 2) {\n            var args = Array.prototype.slice.call(arguments, 2);\n            return go.apply(this, args);\n        }\n        else {\n            return go;\n        }\n    };\n    async.applyEach = doParallel(_applyEach);\n    async.applyEachSeries = doSeries(_applyEach);\n\n    async.forever = function (fn, callback) {\n        function next(err) {\n            if (err) {\n                if (callback) {\n                    return callback(err);\n                }\n                throw err;\n            }\n            fn(next);\n        }\n        next();\n    };\n\n    // Node.js\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = async;\n    }\n    // AMD / RequireJS\n    else if (typeof define !== 'undefined' && define.amd) {\n        define([], function () {\n            return async;\n        });\n    }\n    // included directly via <script> tag\n    else {\n        root.async = async;\n    }\n\n}());\n","/*\nCopyright (c) 2015 Simon Cullen, http://github.com/cullens\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n(function(_global) {\n\n    'use strict';\n\n    var _getMicroTime,\n        _module,\n        async\n        ;\n\n    if (typeof module !== 'undefined' && module.exports) {\n        if (module.exports.setImmediate !== undefined)\n            async = module.exports;\n        else\n            async = require('async');\n        _global = GLOBAL;\n        _module = module;\n        _getMicroTime = function() {\n            var hrTime = process.hrtime();\n            return Math.floor(hrTime[0] * 1000000 + hrTime[1] / 1000);\n        };\n    }\n    else {\n        async = _global.async;\n        _getMicroTime = function() {\n            return Date.now() * 1000;\n        };\n    }\n\n    if (_global.$thing !== undefined) {\n        (_module !== undefined)\n            ? _module.exports = _global.$thing.agent\n            : undefined\n            ;\n        return;\n    }\n\n    // Mash by Johannes Baagøe <baagoe@baagoe.com>\n    function Mash() {\n        var n = 0xefc8249d;\n        var mash = function(data) {\n            data = data.toString();\n            for (var i = 0; i < data.length; i++) {\n                n += data.charCodeAt(i);\n                var h = 0.02519603282416938 * n;\n                n = h >>> 0;\n                h -= n;\n                h *= n;\n                n = h >>> 0;\n                h -= n;\n                n += h * 0x100000000; \n            }\n            return (n >>> 0) * 2.3283064365386963e-10; \n        };\n        return mash;\n    }\n\n    /** @namespace $thing */\n    var $thing = _global.$thing = {};\n\n    $thing.heap = [];\n\n    /**\n     * @memberOf $thing\n     * @method create64BitId\n     */\n    $thing.create64BitId = function() {\n        var h1 = new Mash(),\n            h2 = new Mash()\n            ;\n        for (var i = 0; i < arguments.length; i++) \n            h1(arguments[i] || '');\n        return  h1('').toString(16).split('.')[1] +\n                h2(_getMicroTime()).toString(16).split('.')[1]\n                ;\n    };\n\n    /**\n     * @memberOf $thing\n     * @method getBacktrace\n     */\n    $thing.getBacktrace = function(first) {\n        first = first || 0;\n        try {\n            0();\n        }\n        catch(e) {\n            var trace;\n            if ((trace = e.stack.match(/\\S+\\:\\d+/g)) !== null)\n                return trace.slice(1 + first);\n            else if ((trace = e.stack.match(/\\s+at /g)) !== null)\n                return trace.slice(1 + first);\n            return [];\n        }\n    };\n\n    /**\n     * @memberOf $thing\n     * @method merge\n     */\n    $thing.merge = function() {\n        var args = Array.prototype.slice.call(arguments, 0),\n            obj = args[0],\n            i = 1\n            ;\n        for(; i < args.length; i++)\n            if (args[i] !== undefined)\n                for(var k in args[i])\n                    (obj[k] === undefined)\n                        ? obj[k] = args[i][k]\n                        : undefined\n                        ;\n        return obj;\n    };\n\n    /**\n     * @memberOf $thing\n     * @method attach\n     */\n    $thing.attach = function(def) {\n        if (def._id !== undefined) return def._id;\n        else {\n            var length = $thing.heap.length;\n            while(\n                $thing.heap.length !== 0 &&\n                $thing.heap[$thing.heap.length - 1]._refCount === 0\n            ) ($thing.heap.pop())._id = undefined;\n            if (!$thing.heap.length || $thing.heap.length !== length)\n                def._id = $thing.heap.push(def) - 1;\n            else {\n                def._id = undefined;\n                for(var i = $thing.heap.length - 1;\n                    i > -1 && def._id === undefined;\n                    i--\n                )\n                    if ($thing.heap[i]._refCount === 0) {\n                        $thing.heap[i]._id = undefined;\n                        $thing.heap[def._id = i] = def;\n                    }\n                (def._id === undefined)\n                    ? def._id = $thing.heap.push(def) - 1\n                    : undefined\n                    ;\n            }\n            return def._id;\n        }\n    };\n\n    /**\n     * @memberOf $thing\n     * @method search\n     */\n    $thing.search = function(obj) {\n        var match;\n        for(var i = $thing.heap.length - 1; i > -1; i--) {\n            if ($thing.heap[i]._refCount > 0) {\n                for(var k in obj)\n                    if (!(match = obj[k] === $thing.heap[i][k]))\n                        break;\n                if (match)\n                    return $thing.heap[i];\n            }\n        }\n        return undefined;\n    };\n\n    /**\n     * @memberOf $thing\n     * @method searchMeta\n     */\n    $thing.searchMeta = function(obj, predicate) {\n        var type = 'string',\n            cb = arguments[2],\n            meta = (obj.getMeta !== undefined)\n                ? obj.getMeta()\n                : obj._meta\n            ;\n        switch(arguments[2]) {\n            case 'int':\n            case 'boolean':\n            case 'string':\n                type = arguments[2];\n                cb = arguments[3];\n        }\n        meta.forEach(function(item) {\n            if ((item = item.match(/\\S+/g))[0] === predicate) {\n                item = item.slice(1);\n                switch(type) {\n                    case 'int':\n                        (!isNaN(item[0] = parseInt(item[0])))\n                            ? cb.apply(obj, item)\n                            : undefined\n                            ;\n                        break;\n                    case 'boolean':\n                        switch(item[0].toLowerCase()) {\n                            case 'true':\n                                item[0] = true;\n                                cb.apply(obj, item);\n                                break;\n                            case 'false':\n                                item[0] = false;\n                                cb.apply(obj, item);\n                                break;\n                        }\n                        break;\n                    default:\n                        cb.apply(obj, item);\n                }\n            }\n        });\n    };\n\n    /**\n     * @memberOf $thing\n     * @method switchContext\n     */\n    $thing.switchContext = function(\n        functString,\n        parentOrdinal,\n        superOrdinal,\n        ordinal,\n        superName,\n        methodName\n    ) {\n        functString = functString || this.$vtable[ordinal][methodName].toString();\n        return (\n            functString.indexOf('$parent') > -1 ||\n            functString.indexOf('$super') > -1\n        )\n            ? function() {\n                var ret,\n                    $parent = this.$parent,\n                    $super = this.$super\n                    ;\n                this.$parent = this.$vtable[parentOrdinal] || $parent;\n                this.$super = this.$vtable[superOrdinal][superName];\n                ret = this.$vtable[ordinal][methodName].apply(this, arguments);\n                this.$parent = $parent;\n                this.$super = $super;\n                return ret;\n            }\n            : this.$vtable[ordinal][methodName]\n            ;\n    };\n\n    /**\n     * @memberOf $thing\n     * @method switchParentContext\n     */\n    $thing.switchParentContext = function(\n        functString,\n        parentOrdinal,\n        ordinal,\n        methodName\n    ) {\n        functString = functString || this.$vtable[ordinal][methodName].toString();\n        return (\n            functString.indexOf('$parent') > -1\n        )\n            ? function() {\n                var ret,\n                    $parent = this.$parent\n                    ;\n                this.$parent = this.$vtable[parentOrdinal] || this.$parent;\n                ret = this.$vtable[ordinal][methodName].apply(this, arguments);\n                this.$parent = $parent;\n                return ret;\n            }\n            : this.$vtable[ordinal][methodName]\n            ;\n    };\n\n    /**\n     * @class Object\n     * @memberOf $thing\n     */\n    $thing.Object = function(){};\n\n    /**\n     * Return object name\n     * @memberOf $thing\n     * @method Object#getName\n     * @returns {string}\n     */\n    $thing.Object.prototype.getName = function(){\n        return 'Object';\n    };\n\n    /**\n     * @memberOf $thing\n     * @method Object.inherit\n     * @param {object} obj\n     * @param {object} parent\n     * @returns {object}\n     */\n    var $inherit = $thing.Object.inherit = function(obj, parent) {\n        var i,\n            j,\n            k,\n            v,\n            functString,\n            signature,\n            signatures = {},\n            inherit = this.prototype\n            ;\n        function ret() {\n            /*jshint validthis:true */\n            (this.init !== undefined)\n                ? this.init.apply(this, arguments)\n                : undefined\n                ;\n        }\n        function replace() {\n            return (obj['$' + arguments[1]] !== undefined)\n                ? obj['$' + arguments[1]]\n                : arguments[0]\n                ;\n        }\n        ret.prototype = new this();\n        ret.prototype.constructor = ret;\n        ret.prototype.$vtable = (ret.prototype.$vtable !== undefined)\n            ? ret.prototype.$vtable.slice()\n            : []\n            ;\n        var ordinal = ret.prototype.$vtable.push(obj) - 1,\n            parentOrdinal = ret.prototype.$vtable.push(parent) - 1,\n            superOrdinal = ret.prototype.$vtable.push(inherit) - 1\n            ;\n        ret.inherit = $inherit;\n        for (i in obj) {\n            switch(i) {\n                case '$vtable':\n                    /* falls through */\n                case '$signatures':\n                    /* falls through */\n                case '$owner':\n                    /* falls through */\n                case '$parent':\n                    /* falls through */\n                case '$super':\n                    continue;\n            }\n            v = obj[i];\n            k = i.replace(/\\$\\((.+?)\\)/g, replace);\n            j = k.substring(k.indexOf('.') + 1);\n            if (typeof v !== 'function')\n                ret.prototype[k] = v;\n            else {\n                functString = v.toString();\n                signature = functString.match(/function[^(]*\\(([^)]*)\\)/);\n                (typeof inherit[k] !== 'function')\n                    ? (typeof inherit[j] !== 'function')\n                        ? ret.prototype[k] = $thing.switchParentContext.apply(\n                            ret.prototype,\n                            [   functString,\n                                parentOrdinal,\n                                ordinal,\n                                i\n                            ]\n                        )\n                        : ret.prototype[k] = $thing.switchContext.apply(\n                            ret.prototype,\n                            [   functString,\n                                parentOrdinal,\n                                superOrdinal,\n                                ordinal,\n                                j,\n                                i\n                            ]\n                        )\n                    : ret.prototype[k] = $thing.switchContext.apply(\n                        ret.prototype,\n                        [   functString,\n                            parentOrdinal,\n                            superOrdinal,\n                            ordinal,\n                            k,\n                            i\n                        ]\n                    )\n                    ;\n                (signature !== null)\n                    ? signatures[k] = (signature[1].length)\n                        ? signature[1].split(/,\\s*/)\n                        : []\n                    : undefined\n                    ;\n            }\n        }\n        ret.prototype.$owner = parent || ret.prototype.$owner;\n        ret.prototype.$signatures = $thing.merge(\n            signatures,\n            ret.prototype.$signatures\n        );\n        return ret;\n    };\n\n    $thing.Base = $thing.Object.inherit({\n\n        /**\n         * @constructs Base\n         * @mixes $thing.Object\n         * @memberOf $thing\n         */\n        init: function() {},\n\n        getName: function() {\n            return 'Base';\n        },\n\n        /**\n        * Define an object property\n        * @memberOf $thing\n        * @method Base#property\n        * @param {string} prop property name\n        * @param {function} [cbGetter]\n        * @param {function} [cbSetter]\n        */\n        property: function(prop, cbGetter, cbSetter) {\n            var obj = {};\n            (cbGetter)\n                ? obj.get = cbGetter\n                : undefined\n                ;\n            (cbSetter)\n                ? obj.set = cbSetter\n                : undefined\n                ;\n            Object.defineProperty(this, prop, obj);\n        },\n\n        bind: function(funct) {\n            var self = this;\n            return function() {\n                return funct.apply(self, arguments);\n            };\n        }\n\n    });\n\n    $thing.State = {\n        EXPR_AND:       1,\n        EXPR_NOT:       2,\n        EXPR_OR:        3,\n        DEF_DESC:       1,\n        DEF_NAME:       2,\n        DEF_SOURCE:     4,\n        DEF_EXTENDS:    16,\n        DEF_IMPLEMENTS: 64,\n        DEF_USES:       128,\n        DEF_META:       256,\n        DEF_NOP:        512,\n        DEF_END:        1024,\n        LIFE_INITIATED: 2048,\n        LIFE_ACTIVE:    4096,\n        LIFE_WAITING:   8192,\n        LIFE_SUSPENDED: 16384,\n        LIFE_DELETED:   32768,\n        LIFE_TRANSIT:   65536,\n        LIFE_BLOCKED:   131072\n    };\n\n    $thing.Filter = {\n        ALL:            1,\n        FIRST:          2,\n        LAST:           4\n    };\n\n    $thing.Definition = $thing.Base.inherit({\n\n        _metaHandlers: {\n            mobile: function() {\n                this._isMobile = true;\n            },\n            passive: function() {\n                this._isPassive = true;\n            },\n            singleton: function() {\n                this._singleton = this._singleton || this._source;\n            },\n            catchall: function(catchall, methodName) {\n                this._substitute.$__catchall__ = methodName;\n            }\n        },\n\n        getName: function() {\n            return 'Definition';\n        },\n\n        /**\n        * @constructs Definition\n        * @mixes $thing.Base\n        * @memberOf $thing\n        * @param {object} parent\n        * @param {object} super\n        * @param {string} source\n        * @param {string[]} stack\n        */\n        init: function(parent, _super, source, stack) {\n            var k,\n                item,\n                search,\n                self = this\n                ;\n            this.$super();\n            this._state = $thing.State.DEF_DESC;\n            this._parent = parent;\n            this._children = [];\n            this._meta = [];\n            this._interfaces = [];\n            this._uses = [];\n            this._super = _super;\n            this._source = source;\n            this._refCount = 0;\n            this._isAgent = this._super === $thing.Agent;\n            this._isAbstract = false;\n            this._isPassive = false;\n            this._isMobile = false;\n            this._interfaces = [\n                $thing.create64BitId(source, $thing.heap.length),\n                source\n            ];\n            this._substitute = {\n                $id: this._interfaces[0],\n                $source: source\n            };\n            this.parseStack(stack);\n            if (this._extends !== undefined) {\n                item = $thing.search({_name: this._extends});\n                if (item === undefined) throw(\n                    'DefinitionError: Super Class \\'' +\n                    this._extends + '\\' is not defined'\n                );\n                else {\n                    this._super = item._class;\n                    this._singleton = item._singleton;\n                    for(k = item._meta.length - 1; k > -1; k--)\n                        this._meta.unshift(item._meta[k]);\n                }\n                (this._class === undefined)\n                    ? this._class = {}\n                    : undefined\n                    ;\n            }\n            this._meta.forEach(function(item) {\n                var args = item.split(/ (.+)?/);\n                (self._metaHandlers[args[0]] !== undefined)\n                    ? self._metaHandlers[args[0]].apply(self, args)\n                    : undefined\n                    ;\n            });\n            if (this._isAbstract)\n                search = {\n                    _name: this._name,\n                    _source: this._source\n                };\n            else if (this._singleton !== undefined)\n                search = {\n                    _name: this._name,\n                    _singleton: this._singleton\n                };\n            if (search !== undefined && (item = $thing.search(search))) {\n                this.refObject = item.bind(item.refObject);\n                this.property('class', function() {\n                    return item._class;\n                });\n                this.property('refCount', function() {\n                    return item._refCount;\n                });\n                this.property('isAbstract', function() {\n                    return item._isAbstract;\n                });\n                this.property('isPassive', function() {\n                    return item._isPassive;\n                });\n                this.property('instance', function() {\n                    return item._instance;\n                });\n                this.property('state', function() {\n                    return item._state;\n                });\n                this.property('name', function() {\n                    return item._name;\n                });\n                this.property('parent', function() {\n                    return item._parent;\n                });\n            }\n            else {\n                this._childrenWrapper = {\n                    push: this.bind(this._pushChild),\n                    forEach: this.bind(this._forEachChild)\n                };\n                Object.defineProperty(this._childrenWrapper, 'length', {\n                    get: this.bind(this._countChildren)\n                });\n                (this._factory !== undefined)\n                    ? this._class = this._factory.apply(_global, this._uses)\n                    : undefined\n                    ;\n                if (this._class !== undefined) {\n                    for(k in this._substitute)\n                        this._class[k] = this._substitute[k]\n                        ;\n                    var interfaces = (this._name !== undefined)\n                        ? this._interfaces.concat(this._name)\n                        : this._interfaces\n                        ;\n                    this._class.getInterfaces = function() {\n                        return this.$super().concat(interfaces);\n                    };\n                    this._class = this._super.inherit(\n                        this._class,\n                        parent,\n                        this._isMobile\n                    );\n                    $thing.attach(this);\n                }\n                this.property('class', function() {\n                    return this._class;\n                });\n                this.property('refCount', function() {\n                    return this._refCount;\n                });\n                this.property('isAbstract', function() {\n                    return this._isAbstract;\n                });\n                this.property('isPassive', function() {\n                    return this._isPassive;\n                });\n                this.property('instance', function() {\n                    return this._instance;\n                });\n                this.property('state', function() {\n                    return this._state;\n                });\n                this.property('name', function() {\n                    return this._name;\n                });\n                this.property('parent', function() {\n                    return this._parent;\n                });\n            }\n\n        },\n\n        _forEachChild: function(cb) {\n            this._children.forEach(function(args) {\n                (args[0].getHeapId !== undefined)\n                    ? cb.apply(undefined, args)\n                    : undefined\n                    ;\n            });\n        },\n\n        _pushChild: function(obj) {\n            var id = obj.getHeapId();\n            for(var i = 0; i < this._children.length; i++) {\n                if (this._children[i][0].getHeapId === undefined)\n                    this._children.splice(i, 1);\n                else if (this._children[i][0].getHeapId() === id)\n                    return this._children.length;\n            }\n            return this._children.push(arguments);\n        },\n\n        _countChildren: function() {\n            var length = 0;\n            this._forEachChild(function(child) {\n                (child.getRefCount())\n                    ? length++\n                    : undefined\n                    ;\n            });\n            return length;\n        },\n\n        parseStack: function(stack) {\n            var item,\n                match,\n                self = this\n                ;\n            function replace() {\n                return (arguments[1] === undefined)\n                    ? stack.shift()\n                    : self._substitute['$' + arguments[1]] = stack.shift()\n                    ;\n            }\n            while(  (this._state !== $thing.State.DEF_END) &&\n                    ((item = stack.shift()) !== undefined)\n            ) {\n                switch(typeof item) {\n                    case 'function':\n                        this._state = $thing.State.DEF_END;\n                        this._factory = item;\n                        continue;\n                    case 'object':\n                        this._state = $thing.State.DEF_END;\n                        this._class = item;\n                        continue;\n                }\n                switch(item) {\n                    case 'abstract':\n                        this._isPassive = this._isAbstract = true;\n                        continue;\n                    case 'source':\n                        this._state = $thing.State.DEF_SOURCE;\n                        continue;\n                    case 'extends':\n                        this._state = $thing.State.DEF_EXTENDS;\n                        continue;\n                    case 'implements':\n                        this._state = $thing.State.DEF_IMPLEMENTS;\n                        continue;\n                    case 'uses':\n                        this._state = $thing.State.DEF_USES;\n                        continue;\n                    default:\n                        (this._state === $thing.State.DEF_META || item.charAt(0) === '@')\n                            ? this._state = $thing.State.DEF_META\n                            : (item.match(/ /))\n                                ? this._state = $thing.State.DEF_DESC\n                                : undefined\n                            ;\n                }\n                switch(this._state) {\n                    case $thing.State.DEF_DESC:\n                        item = item.replace(/\\$\\((.+?)\\)|\\$/g, replace);\n                        item = item.split(' @');\n                        stack = item[0].split(/ +/).filter(Boolean).concat(\n                            (item[1] !== undefined)\n                                ? ['@' + item[1]].concat(stack)\n                                : stack\n                        );\n                        (this._name === undefined)\n                            ? this._state = $thing.State.DEF_NAME\n                            : this._state = $thing.State.DEF_NOP\n                            ;\n                        break;\n                    case $thing.State.DEF_META:\n                        item = item.replace(/\\$\\((.+?)\\)|\\$/g, replace);\n                        if (item.charAt(item.length - 1) === '+') {\n                            stack = [\n                                item.slice(0, -1) + stack.shift()\n                            ].concat(stack);\n                        }\n                        else {\n                            this._state = $thing.State.DEF_DESC;\n                            this._meta.push(item.slice(1));\n                        }\n                        break;\n                    case $thing.State.DEF_NAME:\n                        this._name = item || this._name;\n                        break;\n                    case $thing.State.DEF_SOURCE:\n                        this._source = item || this._source;\n                        break;\n                    case $thing.State.DEF_EXTENDS:\n                        this._extends = item || this._extends;\n                        break;\n                    case $thing.State.DEF_IMPLEMENTS:\n                        ((match = item.match(/^\\/(.*?)\\/([gimy]*)$/)) !== null)\n                            ? this._interfaces.push(\n                                new RegExp(match[1], match[2])\n                            )\n                            : this._interfaces.push(item)\n                            ;\n                        break;\n                    case $thing.State.DEF_USES:\n                        this._uses.push(agent(item));\n                        break;\n                }\n            }\n        },\n\n        patchObject: function(obj) {\n            var self = this;\n            obj.refObject = this.bind(this.refObject);\n            obj.getRefCount = function() {\n                return self._refCount;\n            };\n            obj.getHeapId = function() {\n                return self._id;\n            };\n            obj.getName = function() {\n                return self._name;\n            };\n            obj.getSource = function() {\n                return self._source;\n            };\n            obj.getChildren = function() {\n                return self._childrenWrapper;\n            };\n            obj.getState = function() {\n                return self._state;\n            };\n            obj.setState = function() {\n                var states = Array.prototype.slice.call(arguments, 0);\n                states.forEach(function(state) {\n                    self._state |= state;\n                });\n                this.getChildren().forEach(function(child) {\n                    child.setState(states);\n                });\n            };\n            obj.unsetState = function() {\n                var states = Array.prototype.slice.call(arguments, 0);\n                states.forEach(function(state) {\n                    self._state &= ~state;\n                });\n                this.getChildren().forEach(function(child) {\n                    child.unsetState(states);\n                });\n            };\n            obj.getMeta = function() {\n                return self._meta;\n            };\n            obj.isAbstract = function() {\n                return self._isAbstract;\n            };\n            return obj;\n        },\n\n        unpatchObject: function(obj) {\n            delete obj.refObject;\n            delete obj.getRefCount;\n            delete obj.getHeapId;\n            delete obj.getName;\n            delete obj.getSource;\n            delete obj.getChildren;\n            delete obj.getState;\n            delete obj.setState;\n            delete obj.unsetState;\n            delete obj.getMeta;\n            delete obj.isAbstract;\n            return obj;\n        },\n\n        refObject: function(cb) {\n            var self = this;\n            this.parent.refObject(function(parent, cbRelease) {\n                var constructed;\n                if (self._refCount)\n                    self._refCount++;\n                else {\n                    self._refCount = constructed = 1;\n                    self._instance = self.patchObject(new self._class());\n                    self._instance.setState($thing.State.LIFE_INITIATED);\n                }\n                if (constructed && self._isAgent && !self._isAbstract)\n                    self._instance.setup();\n                cb(\n                    self._instance,\n                    function() {\n                        if (self._isAgent && self._isPassive) return;\n                        else if (--self._refCount !== 0) cbRelease();\n                        else {\n                            if (self._isAgent)\n                                self._instance.takedown(\n                                    function() {\n                                        self._children = [];\n                                        self.unpatchObject(self._instance);\n                                        delete self._instance;\n                                        cbRelease();\n                                    }\n                                );\n                            else {\n                                self._children = [];\n                                self.unpatchObject(self._instance);\n                                delete self._instance;\n                                cbRelease();\n                            }\n                        }\n                    }\n                );\n            });\n        }\n\n    });\n\n    /**\n     * @class Delegate\n     * @mixes $thing.Base\n     * @memberOf $thing\n     */\n    $thing.Delegate = $thing.Base.inherit({\n\n        getName: function() {\n            return 'Delegate';\n        },\n\n        /**\n         * @memberOf $thing\n         * @method Delegate#getInterfaces\n         * @returns {string[]}\n         */\n        getInterfaces: function() {\n            return [];\n        },\n\n        /**\n         * @memberOf $thing\n         * @method Delegate#matchInterface\n         * @param {string} pattern\n         * @param {string} source\n         * @returns {string}\n         */\n        matchInterface: function(pattern) {\n            var interfaces = this.getInterfaces();\n            for(var i = 0; i < interfaces.length; i++)\n                if (\n                    (interfaces[i] instanceof RegExp)\n                        ? pattern.match(interfaces[i]) !== null\n                        : interfaces[i] === pattern\n                ) break;\n            return interfaces[i];\n        },\n\n        /**\n         * @memberOf $thing\n         * @method Delegate#refObject\n         */\n        refObject: function(cb) {\n            cb(this, function(){});\n        },\n\n        /**\n         * @memberOf $thing\n         * @method Delegate#dispatch\n         * @param {object} call\n         */\n        dispatch: function(call, cb) {\n            var method,\n                signature\n                ;\n            cb = cb || function() {};\n            if (call.method.charAt(0) === '$') return cb();\n            (this[method = call.interface + '.' + call.method] === undefined)\n                ? (this[method = call.method] === undefined)\n                    ? method = undefined\n                    : undefined\n                : undefined\n                ;\n            (   method === undefined ||\n                (signature = this.$signatures[method]) === undefined ||\n                signature[signature.length - 1].charAt(0) !== '$' ||\n                signature.length !== call.args.length + 1\n            )\n                ? ( this[method = this.$__catchall__] === undefined ||\n                    (signature = this.$signatures[method]) === undefined ||\n                    signature[1].charAt(0) !== '$' ||\n                    signature.length !== 2\n                )\n                    ? cb()\n                    : this[this.$__catchall__].apply(\n                        this,\n                        [call.args, cb]\n                    )\n                : this[method].apply(\n                    this,\n                    call.args.concat(cb)\n                )\n                ;\n        }\n\n    });\n\n    $thing.Pattern = $thing.Delegate.inherit({\n\n        getName: function() {\n            return 'Pattern';\n        },\n\n        /**\n         * @constructs Pattern\n         * @mixes $thing.Delegate\n         * @memberOf $thing\n         * @param {(string|string[])} pattern\n         * @param {string} source\n         */\n        init: function(pattern, source) {\n            this.$super();\n            this._pattern = pattern;\n            this.property('source', function() {\n                return source;\n            });\n        },\n\n        /**\n         * @memberOf $thing\n         * @method Pattern#toArray\n         * @returns {string[]}\n         */\n        toArray: function() {\n            return (this._pattern instanceof Array)\n                ? this._pattern\n                : [[this._pattern]]\n                ;\n        }\n\n    });\n\n    /**\n     * @class Agent\n     * @mixes $thing.Delegate\n     * @memberOf $thing\n     */\n    $thing.Agent = $thing.Delegate.inherit({\n\n        getName: function() {\n            return 'Agent';\n        },\n\n        getInterfaces: function() {\n            return ['Agent'];\n        },\n\n        /**\n         * @memberOf $thing\n         * @method Agent#setup\n         */\n        setup: function(cb) {\n            this.setState($thing.State.LIFE_ACTIVE);\n            this.doActivate(cb);\n        },\n\n        /**\n         * @memberOf $thing\n         * @method Agent#takedown\n         */\n        takedown: function(cb) {\n            this.doDelete(cb);\n        },\n\n        /**\n         * @memberOf $thing\n         * @method Agent#doActivate\n         */\n        doActivate: function(cb) {\n            this.unsetState($thing.State.LIFE_SUSPENDED);\n            if (cb) cb();\n            agent();\n        },\n\n        /**\n         * @memberOf $thing\n         * @method Agent#doDelete\n         */\n        doDelete: function(cb) {\n            this.setState($thing.State.LIFE_DELETED);\n            if (cb) cb();\n            agent();\n        },\n\n        /**\n         * @memberOf $thing\n         * @method Agent#doSuspend\n         */\n        doSuspend: function(cb) {\n            this.setState($thing.State.LIFE_SUSPENDED);\n            if (cb) cb();\n            agent();\n        },\n\n        /**\n         * @memberOf $thing\n         * @method Agent#doWait\n         */\n        doWait: function(cb) {\n            this.setState($thing.State.LIFE_WAITING);\n            if (cb) cb();\n            agent();\n        },\n\n        /**\n         * @memberOf $thing\n         * @method Agent#doWake\n         */\n        doWake: function(cb) {\n            this.unsetState($thing.State.LIFE_WAITING);\n            if (cb) cb();\n            agent();\n        },\n\n        /**\n         * @memberOf $thing\n         * @method Agent#addBehaviour\n         * @param {*}\n         * @returns {$thing.Behaviour}\n         */\n        addBehaviour: function() {\n            var obj,\n                reset,\n                self = this,\n                args = Array.prototype.slice.call(arguments, 0)\n                ;\n            var def = new $thing.Definition(\n                    this,\n                    $thing.Behaviour,\n                    $thing.getBacktrace(1)[0],\n                    args\n                )\n                ;\n            if (def.class !== undefined) {\n                var funct = function() {\n                    (!def.refCount)\n                        ? def.refObject(function(instance, cbRelease) {\n                            $thing.attach(def);\n                            obj = instance;\n                            self.getChildren().push(obj, cbRelease);\n                        })\n                        : obj = def.instance\n                        ;\n                    obj.unsetState(\n                        $thing.State.LIFE_WAITING |\n                        $thing.State.LIFE_SUSPENDED |\n                        $thing.State.LIFE_DELETED |\n                        $thing.State.LIFE_TRANSIT |\n                        $thing.State.LIFE_BLOCKED\n                    );\n                    obj.setState(\n                        self.getState() |\n                        $thing.State.LIFE_ACTIVE\n                    );\n                    agent();\n                };\n                funct();\n                reset = obj.reset;\n                obj.reset = function() {\n                    funct();\n                    reset.apply(obj, arguments);\n                };\n            }\n            return obj;\n        },\n\n        /**\n         * @memberOf $thing\n         * @method Agent#removeBehaviour\n         * @param {string|$thing.Behaviour}\n         */\n        removeBehaviour: function() {\n            var objs = [],\n                children = this.getChildren()\n                ;\n            if (    typeof arguments[0] === 'object' &&\n                    arguments[0].getHeapId !== undefined\n            ) {\n                var id = arguments[0].getHeapId();\n                children.forEach(function(obj, cbRelease) {\n                    if (obj.getHeapId() === id) {\n                        obj.setState($thing.State.LIFE_DELETED);\n                        cbRelease();\n                        objs.push(obj);\n                    }\n                });\n            }\n            else {\n                var args = Array.prototype.slice.call(arguments, 0),\n                    def = new $thing.Definition(\n                        this,\n                        $thing.Behaviour,\n                        $thing.getBacktrace(1)[0],\n                        args\n                    )\n                    ;\n                children.forEach(function(obj, cbRelease) {\n                    if (obj.getName() === def.name) {\n                        obj.setState($thing.State.LIFE_DELETED);\n                        cbRelease();\n                        objs.push(obj);\n                    }\n                });\n            }\n            return objs;\n        }\n\n    });\n\n    /**\n     * @class Behaviour\n     * @mixes $thing.Delegate\n     * @memberOf $thing\n     */\n    $thing.Behaviour = $thing.Delegate.inherit({\n\n        getName: function() {\n            return 'Behaviour';\n        },\n\n        getInterfaces: function() {\n            return ['Behaviour'];\n        },\n\n        done: function() {\n            return false;\n        },\n\n        action: function($cb) {\n            (this.done())\n                ? this.$owner.removeBehaviour(this)\n                : undefined\n                ;\n            if ($cb) $cb();\n        },\n\n        block: function(cb) {\n            this.setState($thing.State.LIFE_BLOCKED);\n            if (cb) cb();\n        },\n\n        restart: function(cb) {\n            this.unsetState($thing.State.LIFE_BLOCKED);\n            if (cb) cb();\n        },\n\n        reset: function(cb) {\n            if (cb) cb();\n        }\n\n    });\n\n    $thing.Selector = $thing.Base.inherit({\n\n        getName: function() {\n            return 'Selector';\n        },\n\n        /**\n         * @constructs Selector\n         * @mixes $thing.Base\n         * @memberOf $thing\n         * @param {(string|string[]|$thing.Pattern)} pattern\n         * @param {string} source\n         * @param {boolean} [includePassive=true]\n         */\n        init: function(pattern, source, includePassive) {\n            var i,\n                include,\n                def\n                ;\n            this.$super();\n            this._source = source;\n            this._exprs = [];\n            this._selection = [];\n            this._callbacks = [];\n            if (pattern instanceof $thing.Pattern) {\n                this._source = pattern.source;\n                pattern = pattern.toArray();\n            }\n            else if (typeof pattern === 'string') {\n                var expr = {\n                    and: {},\n                    not: {}\n                };\n                expr.and[pattern] = true;\n                this._exprs.push(expr);\n            }\n            if (pattern instanceof Array) {\n                for(i = 0; i < pattern.length; i++) {\n                    this.parseStack(pattern[i]);\n                }\n            }\n            includePassive =\n                (includePassive === undefined)\n                    ? true\n                    : includePassive\n                    ;\n            for(i = 0; i < $thing.heap.length; i++) {\n                def = $thing.heap[i];\n                include = (def.isPassive)\n                    ? (def.isPassive & includePassive) &&\n                        def.state < $thing.State.LIFE_SUSPENDED\n                    : (includePassive)\n                        ? def.state < $thing.State.LIFE_SUSPENDED\n                        : def.state < $thing.State.LIFE_WAITING\n                    ;\n                (   !def.isAbstract &&\n                    def.refCount > 0 &&\n                    def.state & $thing.State.LIFE_ACTIVE &&\n                    include\n                )\n                    ? def.refObject(this.bind(this.matchObject))\n                    : undefined\n                    ;\n            }\n            this.property('length', function() {\n                return this._selection.length;\n            });\n        },\n\n        parseStack: function(stack) {\n            var k,\n                item,\n                state = $thing.State.EXPR_AND,\n                expr = {\n                    and: {},\n                    not: {}\n                }\n                ;\n            while((item = stack.shift()) !== undefined) {\n                switch(item) {\n                    case 'and':\n                        state = $thing.State.EXPR_AND;\n                        continue;\n                    case 'not':\n                        state = $thing.State.EXPR_NOT;\n                        continue;\n                    case 'or':\n                        state = $thing.State.EXPR_OR;\n                        continue;\n                }\n                switch(state) {\n                    case $thing.State.EXPR_AND:\n                        expr.and[item] = true;\n                        break;\n                    case $thing.State.EXPR_NOT:\n                        expr.not[item] = true;\n                        break;\n                    case $thing.State.EXPR_OR:\n                        for (k in expr.and) {\n                            this._exprs.push(expr);\n                            break;\n                        }\n                        expr = {\n                            and: {},\n                            not: {}\n                        };\n                        expr.and[item] = true;\n                        break;\n                }\n            }\n            for (k in expr.and) {\n                this._exprs.push(expr);\n                break;\n            }\n        },\n\n        matchObject: function(obj, cbRelease) {\n            var k,\n                match;\n            for (var i = 0; i < this._exprs.length; i++) {\n                var m,\n                    expr = this._exprs[i]\n                    ;\n                for(k in expr.and)\n                    if ((m = obj.matchInterface(k, this._source)) !== undefined)\n                        match = match || m;\n                    else {\n                        match = undefined;\n                        break;\n                    }\n                if (match === undefined)\n                    continue;\n                for(k in expr.not)\n                    if (obj.matchInterface(k, this._source)) {\n                        match = undefined;\n                        return;\n                    }\n                if (match !== undefined)\n                    break;\n            }\n            if (match === undefined)\n                cbRelease();\n            else {\n                this._callbacks.push(cbRelease);\n                this._selection.push({match: match, obj: obj});\n            }\n        },\n\n        dispatch: function(call, cbItem, cbDone) {\n            async.setImmediate(this.bind(function() {\n\n                if (    call.filters & $thing.Filter.FIRST &&\n                        this._selection.length > 0\n                ) {\n\n                    this._selection[0].obj.dispatch(\n                        {   interface: this._selection[0].match,\n                            method: call.method,\n                            args: call.args\n                        },\n                        this.bind(function() {\n                            return cbItem.apply(\n                                this._selection[0].obj,\n                                Array.prototype.slice.call(\n                                    arguments,\n                                    0\n                                ).concat(cbDone)\n                            );\n                        })\n                    );\n\n                }\n                else if (   call.filters & $thing.Filter.LAST &&\n                            this._selection.length > 0\n                ) {\n                    var i = this._selection.length - 1;\n\n                    this._selection[i].obj.dispatch(\n                        {   interface: this._selection[i].match,\n                            method: call.method,\n                            args: call.args\n                        },\n                        this.bind(function() {\n                            return cbItem.apply(\n                                this._selection[i].obj,\n                                Array.prototype.slice.call(\n                                    arguments,\n                                    0\n                                ).concat(cbDone)\n                            );\n                        })\n                    );\n\n                }\n                else if (   call.filters & $thing.Filter.ALL &&\n                            this._selection.length > 0\n                ) {\n\n                    async.each(\n                        this._selection,\n                        function(item, cbNext) {\n                            item.obj.dispatch(\n                                {   interface: item.match,\n                                    method: call.method,\n                                    args: call.args\n                                },\n                                function() {\n                                    return cbItem.apply(\n                                        item.obj,\n                                        Array.prototype.slice.call(\n                                            arguments,\n                                            0\n                                        ).concat(cbNext)\n                                    );\n                                }\n                            );\n                        },\n                        cbDone\n                    );\n            \n                }\n                else {\n\n                    cbDone();\n\n                }\n\n            }));\n        },\n\n        release: function() {\n            for(var i = 0; i < this._callbacks.length; i++)\n                this._callbacks[i]();\n            this._callbacks = [];\n            this._selection = [];\n        }\n\n    });\n\n    $thing.WAKE_MIN_PERIOD = 50000;\n    $thing.nextWakeTime = _getMicroTime();\n    $thing.isActionTaskQueued = false;\n\n    $thing.wakeTask = function() {\n        var now = _getMicroTime();\n\n        if (now >= $thing.nextWakeTime) {\n\n            var selector = new $thing.Selector(\n                    [['Behaviour', 'and', 'Waker']], \n                    '$thing', \n                    false\n                )\n                ;\n\n            if (selector.length === 0) {\n                selector.release();\n                selector = undefined;\n            }\n            else {\n                selector.dispatch(\n                    {   filters: $thing.Filter.ALL,\n                        method: 'action',\n                        args: []\n                    },\n                    function(cbNext) {\n                        cbNext();\n                    },\n                    function() {\n                        selector.release();\n                        selector = undefined;\n                    }\n                );\n            }\n\n            $thing.nextWakeTime =   \n                now + $thing.WAKE_MIN_PERIOD - (now % $thing.WAKE_MIN_PERIOD);\n        }\n    };\n\n    $thing.enqueueActionTask = function() {\n        if ($thing.isActionTaskQueued) return;\n        $thing.isActionTaskQueued = true;\n\n        async.setImmediate(function() {\n            var selector = new $thing.Selector(\n                    [['Behaviour', 'not', 'Waker']], \n                    '$thing', \n                    false\n                )\n                ;\n        \n            if (selector.length === 0) {\n                selector.release();\n                selector = undefined;\n                $thing.isActionTaskQueued = false;\n            }\n            else {\n                selector.dispatch(\n                    {   filters: $thing.Filter.ALL,\n                        method: 'action',\n                        args: []\n                    },\n                    function(cbNext) {\n                        cbNext();\n                    },\n                    function() {\n                        selector.release();\n                        selector = undefined;\n                        $thing.isActionTaskQueued = false;\n                        $thing.enqueueActionTask();\n                    }\n                );\n            }\n\n        });\n\n    };\n\n    function cbBuilder(self, args, cbDone) {\n        cbDone = cbDone || function(){};\n        return function() {\n            var self = this,\n                args = arguments\n                ;\n            agent();\n            return (!args.length)\n                ? cbDone()\n                : function() {\n                    var cbObj = (arguments.length)\n                        ? arguments\n                        : [$thing.Container]\n                        ;\n                    async.setImmediate(function() {\n                        agent(self)\n                            .apply(_global, args)\n                            .apply(_global, cbObj)\n                            ;\n                        cbDone();\n                    });\n                }\n                ;\n        }.apply(self, args);\n    }\n\n    /**\n     * @method agent\n     * @param {*}\n     */\n    var agent = $thing.agent = function() {\n        var def,\n            source,\n            selector,\n            filter,\n            pattern,\n            selects,\n            callChain,\n            refCount = 0\n            ;\n\n        switch(arguments.length) {\n            case 0:\n                $thing.wakeTask();\n                return $thing.enqueueActionTask();\n            case 1:\n                if (arguments[0] instanceof $thing.Pattern) {\n                    selector = new $thing.Selector(pattern = arguments[0]);\n                    break;\n                }\n                else if (   typeof arguments[0] === 'object' &&\n                            arguments[0].getInterfaces !== undefined\n                ) {\n                    selector = arguments[0];\n                    break;\n                }\n                /* falls through */\n            default:\n                var args = Array.prototype.slice.call(arguments, 0);\n                def = new $thing.Definition(\n                    $thing.Container,\n                    $thing.Agent,\n                    (source = $thing.getBacktrace(1)[0]),\n                    args\n                );\n                if (def.class !== undefined)\n                    return def.refObject(\n                        function(obj, cbRelease){\n                            cbRelease();\n                        }\n                    );\n                else {\n                    selects = [];\n                    $thing.searchMeta(def, 'select', function() {\n                        selects.push(Array.prototype.slice.call(arguments, 0));\n                    });\n                    selector = new $thing.Selector(\n                        pattern = (selects.length)\n                            ? selects\n                            : def.name,\n                        source\n                    );\n                }\n        }\n\n        filter = function(filters, callArgs) {          \n            return function() {\n                var obj,\n                    args = Array.prototype.slice.call(arguments, 0)\n                    ;\n                \n                switch(arguments.length) {\n                    case 0:\n                        obj = $thing.Container;\n                        break;\n                    case 1:\n                        if (typeof arguments[0] === 'object' &&\n                            arguments[0].getInterfaces !== undefined\n                        ) {\n                            obj = arguments[0];\n                            break;\n                        }\n                        /* falls through */\n                    default:\n                        var source = $thing.getBacktrace(1)[0],\n                            def = new $thing.Definition(\n                                $thing.Container,\n                                $thing.Agent,\n                                source,\n                                args\n                            )\n                            ;\n                        if (def.class !== undefined) obj = def;\n                        else {\n                            selects = [];\n                            $thing.searchMeta(def, 'select', function() {\n                                selects.push(Array.prototype.slice.call(arguments, 0));\n                            });\n                            obj = new $thing.Pattern(\n                                (selects.length)\n                                    ? selects\n                                    : def.name,\n                                source\n                            );\n                        }\n                        break;\n                }\n\n                obj.refObject(function(obj, cbRelease) {\n\n                    refCount++;\n\n                    (pattern !== undefined)\n                        ? selector.dispatch(\n                            {   filters: filters,\n                                method: callArgs[0],\n                                args: callArgs.slice(1)\n                            },\n                            function() {\n                                return cbBuilder(\n                                    obj,\n                                    Array.prototype.slice.call(\n                                        arguments,\n                                        0,\n                                        arguments.length - 1\n                                    ),\n                                    arguments[arguments.length - 1]\n                                );\n                            },\n                            function() {\n                                if (--refCount === 0) {\n                                    cbRelease();\n                                    selector.release();\n                                }\n                            }\n                        )\n                        : selector.dispatch(\n                            {   filters: filters,\n                                method: callArgs[0],\n                                args: callArgs.slice(1)\n                            },\n                            function() {\n                                return cbBuilder(\n                                    obj,\n                                    arguments,\n                                    function() {\n                                        if (--refCount === 0) {\n                                            cbRelease();\n                                        }\n                                    }\n                                );\n                            }\n                        )\n                        ;\n                });\n\n                return callChain;\n            };\n        };\n\n        callChain = function() {\n            return filter(\n                $thing.Filter.ALL, \n                Array.prototype.slice.call(arguments, 0)\n            );\n        };\n\n        callChain.all = callChain;\n\n        callChain.first = function() {\n            return filter(\n                $thing.Filter.FIRST, \n                Array.prototype.slice.call(arguments, 0)\n            );\n        };\n\n        callChain.last = function() {\n            return filter(\n                $thing.Filter.LAST, \n                Array.prototype.slice.call(arguments, 0)\n            );\n        };\n\n        return callChain;\n    };\n\n    (_module !== undefined)\n        ? _module.exports = agent\n        : _global.agent = agent\n        ;\n\n    /**\n     * @class Container\n     * @mixes $thing.Agent\n     * @memberOf $thing\n     */\n    $thing.Container = new ($thing.Agent.inherit({\n        getName: function() {\n            return 'Container';\n        },\n        getInterfaces: function() {\n            return ['Container'];\n        },\n        setup: undefined,\n        takedown: undefined,\n        addBehaviour: undefined,\n        removeBehaviour: undefined\n    }))();\n\n    /**\n     * @class Heartbeat\n     * @mixes $thing.Agent\n     * @abstract\n     * @singleton\n     */\n    agent(\n        '@singleton', \n        'abstract Heartbeat implements Container', {\n\n            setup: function(cb) {\n                this.$super(cb);\n            \n                this.keepAlive = this.addBehaviour('@passive', {});\n\n                this.intervalId = setInterval(\n                    agent, \n                    $thing.WAKE_MIN_PERIOD / 1000\n                );\n            },\n            \n            /**\n             * @method Heartbeat#destroy\n             */\n            destroy: function($cb) {\n                \n                clearInterval(this.intervalId);\n\n                this.removeBehaviour(this.keepAlive);\n\n                $cb();\n            }\n        }\n    );\n\n    agent({\n        setup: function(cb) {\n            this.$super(cb);\n\n            /**\n             * @class Done\n             * @mixes $thing.Behaviour\n             */\n            this.addBehaviour(\n                '@passive',\n                '@catchall catchAll',\n                'Done', {\n                    catchAll: function(args, $cb) {\n                        $cb('done')();\n                    }\n                }\n            );\n\n            /**\n             * @class Error\n             * @mixes $thing.Behaviour\n             */\n            this.addBehaviour(\n                '@passive',\n                '@catchall catchAll',\n                'Error', {\n                    catchAll: function(args, $cb) {\n                        $cb('doneWithError', -1)();\n                    }\n                }\n            );\n\n            /**\n             * @class Flow\n             * @abstract\n             * @mixes $thing.Behaviour\n             */\n            this.addBehaviour(\n                'abstract Flow', {\n                    /**\n                     * @method Flow#getFlow\n                     * @returns {function[]}\n                     */\n                    getFlow: function() {\n                        var self = this,\n                            reset = this.reset,\n                            getFlow = this.getFlow,\n                            methods = [],\n                            names = [],\n                            args = Array.prototype.slice.call(arguments, 0)\n                            ;\n                        args.forEach(function(item) {\n                            (names.indexOf(item) === -1)\n                                ? names.push(item)\n                                : undefined\n                                ;\n                        });\n                        $thing.searchMeta(this, 'flow', function() {\n                            Array.prototype.slice.call(arguments, 0).forEach(\n                                function(item) {\n                                    (names.indexOf(item) === -1)\n                                        ? names.push(item)\n                                        : undefined\n                                        ;\n                                }\n                            );\n                        });\n                        names.forEach(function(item) {\n                            (   self.$signatures[item] !== undefined &&\n                                self.$signatures[item]\n                                    [self.$signatures[item].length - 1]\n                                        .charAt(0) === '$'\n                            )\n                                ? methods.push(function() {\n                                    var cbYield = arguments[arguments.length - 1],\n                                        args = Array.prototype.slice.call(\n                                            arguments,\n                                            0,\n                                            arguments.length - 1\n                                        )\n                                        ;\n                                    args.push(function() {\n                                        var args = arguments;\n                                        return (args.length === 0)\n                                            ? cbYield()\n                                            : function() {\n                                                agent(new ($thing.Agent.inherit({\n                                                    done: function($cb) {\n                                                        var i = names.indexOf(item);\n                                                        names.splice(i, 1);\n                                                        methods.splice(i, 1);\n                                                        $cb();\n                                                        cbYield();\n                                                    },\n                                                    yield: function($cb) {\n                                                        $cb();\n                                                        cbYield();\n                                                    }\n                                                }))())\n                                                .apply(_global, args)\n                                                .apply(_global, [])\n                                                ;\n                                            }\n                                            ;\n                                    });\n                                    self[item].apply(self, args);\n                                })\n                                : undefined\n                                ;\n                        });\n                        this.reset = function(cb) {\n                            this.getFlow = getFlow;\n                            return reset.apply(this, [cb]);\n                        };\n                        this.getFlow = function() {\n                            return methods;\n                        };\n                        return methods;\n                    },\n                    action: function($cb) {\n                        (!this.getFlow().length)\n                            ? this.done = function() {\n                                return true;\n                            }\n                            : undefined\n                            ;\n                        this.$super($cb);\n                    },\n                    done: function() {\n                        return false;\n                    }\n                }\n            );\n\n            /**\n             * @class Series\n             * @mixes Flow\n             * @abstract\n             */\n            this.addBehaviour(\n                'abstract Series extends Flow', {\n                    action: function($cb) {\n                        async.series(\n                            this.getFlow(),\n                            this.bind(function() {\n                                this.$super($cb);\n                            })\n                        );\n                    }\n                }\n            );\n\n            /**\n             * @class Parallel\n             * @mixes Flow\n             * @abstract\n             */\n            this.addBehaviour(\n                'abstract Parallel extends Flow', {\n                    action: function($cb) {\n                        async.parallel(\n                            this.getFlow(),\n                            this.bind(function() {\n                                this.$super($cb);\n                            })\n                        );\n                    }\n                }\n            );\n\n            /**\n             * @class Queue\n             * @mixes Flow\n             * @abstract\n             */\n            this.addBehaviour(\n                'abstract Queue extends Flow', {\n                    /**\n                     * @method Queue#getQueue\n                     */\n                    getQueue: function() {\n                        var self = this,\n                            concurrency = 1,\n                            limit = 0,\n                            functs = [],\n                            active = 0,\n                            paused = false\n                            ;\n                        $thing.searchMeta(\n                            this,\n                            'concurrency',\n                            'int',\n                            function(value) {\n                                concurrency = value;\n                            }\n                        );\n                        $thing.searchMeta(\n                            this,\n                            'limit',\n                            'int',\n                            function(value) {\n                                limit = value;\n                            }\n                        );\n                        var queue = {\n                            push: function(item, cbItem) {\n                                if (limit && functs.length > limit - 1) {\n                                    cbItem(-1);\n                                    return;\n                                }\n                                if (!paused)\n                                    self.unsetState($thing.State.LIFE_WAITING);\n                                functs.push(function(cbDone) {\n                                    var flow = self.getFlow();\n                                    if (!flow.length) {\n                                        cbDone();\n                                        cbItem(-1);\n                                    }\n                                    else {\n                                        async.applyEach(\n                                            flow,\n                                            item,\n                                            function(err) {\n                                                cbDone();\n                                                cbItem(err);\n                                            }\n                                        );\n                                    }\n                                });\n                            },\n                            action: function(next, cb) {\n                                var call = [],\n                                    length = (functs.length < concurrency)\n                                        ? functs.length\n                                        : concurrency\n                                        ;\n                                while(length--)\n                                    call.push(functs.shift());\n                                if (call.length > 0) {\n                                    active = call.length;\n                                    async.parallel(call, function() {\n                                        active = 0; \n                                        next(cb);\n                                    });\n                                }\n                                else {\n                                    self.setState($thing.State.LIFE_WAITING);\n                                    next(cb);\n                                }\n                            },\n                            pause: function() {\n                                if (!paused) {\n                                    paused = true;\n                                    self.setState($thing.State.LIFE_WAITING);\n                                }\n                            },\n                            resume: function() {\n                                if (paused) {\n                                    paused = false;\n                                    self.unsetState($thing.State.LIFE_WAITING);\n                                    agent();\n                                }\n                            }   \n                        };\n                        Object.defineProperty(queue, 'length', {\n                            get: function() {\n                                return active + functs.length;\n                            }\n                        });\n                        this.getQueue = function() {\n                            return queue;\n                        };\n                        return queue;\n                    },\n                    action: function($cb) {\n                        this.getQueue().action(this.bind(this.$super), $cb);\n                    },\n                    /**\n                     * @method Queue#push\n                     */\n                    push: function(items, $cb) {\n                        if (items instanceof Array) {\n                            var self = this,\n                                length = items.length,\n                                errs = [],\n                                ret\n                                ;\n                            items.forEach(function(item, i) {\n                                self.getQueue().push(item, function(err) {\n                                    ret = (errs[i] = err) || ret;\n                                    (!--length)\n                                        ? (ret)\n                                            ? $cb('doneWithError', errs)()\n                                            : $cb('done')()\n                                        : undefined\n                                        ;\n                                });\n                            });\n                        }\n                        else {\n                            this.getQueue().push(items, function(err) {\n                                (err)\n                                    ? $cb('doneWithError', err)()\n                                    : $cb('done')()\n                                    ;\n                            });\n                        }\n                        agent();\n                    },\n                    pause: function($cb) {\n                        this.getQueue().pause();\n                        $cb();\n                    },\n                    resume: function($cb) {\n                        this.getQueue().resume();\n                        $cb();\n                    }\n                }\n            );\n\n            /**\n             * @class Waker\n             * @mixes Behaviour\n             * @abstract\n             */\n            this.addBehaviour(\n                'abstract Waker', {\n\n                    /**\n                     * @method Waker#getWakeTime\n                     */\n                    getWakeTime: function() {\n                        var time,\n                            period = 1000000,\n                            now = _getMicroTime()\n                            ;\n\n                        $thing.searchMeta(\n                            this,\n                            'period',\n                            'int',\n                            function(value) {\n                                period = value * 1000;\n                            }\n                        );\n\n                        time = now + period - (now % period);\n\n                        this.getWakeTime = function() {\n                            return time;\n                        };\n                        \n                        return this.getWakeTime();\n                    },\n\n                    /**\n                     * @method Waker#wake\n                     */\n                    wake: function(cb) {\n                        cb();\n                    },\n\n                    action: function($cb) {\n                        var time = this.getWakeTime();\n\n                        if (time === undefined) \n                            return this.$super($cb);\n                        else if (_getMicroTime() >= time) {\n                            this.getWakeTime = function() {\n                                return undefined;\n                            };\n                            return this.wake(this.bind(function() {\n                                this.$super($cb);\n                            }));\n                        }\n\n                        this.$super($cb);\n                    },\n\n                    done: function() {\n                        if (this.getWakeTime() !== undefined)\n                            return false;\n                        else {\n                            delete this.getWakeTime;\n                            return true;\n                        }\n                    },\n\n                    reset: function($cb) {\n                        delete this.getWakeTime;\n                        this.$super($cb);\n                    },\n\n                    /**\n                     * @method Waker#stop\n                     */\n                    stop: function($cb) {\n                        this.$owner.removeBehaviour(this);\n                        delete this.getWakeTime;\n                        if ($cb) $cb();\n                    }\n \n                }\n            );\n\n            /**\n             * @class Sensor\n             * @mixes Queue\n             * @abstract\n             */\n            this.addBehaviour('abstract Sensor extends Queue');\n\n            /**\n             * @class Actuator\n             * @mixes Queue\n             * @abstract\n             */\n            this.addBehaviour('abstract Actuator extends Queue');\n        }\n    });\n\n})(this);\n"]}