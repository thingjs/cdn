"use strict";if(!$thing.usePaho)var mqtt=require("mqtt");$thing.agent("abstract Mqtt implements Container",{setup:function(cb){this.$super(cb),this.port=$thing.usePaho?80:1883,this.reconnectPeriod=1e3,this.isConnecting=!1,this.isConnected=!1,this.actuatorsTotal=0,this.topicRefs={},this.pendingSubs={},this.pendingUnsubs={};var z=-1,self=this;if($thing.searchMeta(this,"host","string",function(value){self.host=value}),$thing.searchMeta(this,"port","int",function(value){self.port=value}),$thing.searchMeta(this,"clientId","string",function(value){self.clientId=value}),$thing.searchMeta(this,"reconnectPeriod","int",function(value){self.reconnectPeriod=value}),void 0===this.host)throw new Error("Mqtt: Missing @host");void 0===this.clientId&&(this.clientId="xxxxxxxx-xxxx-4xxz-yzzz-zzzzzzzzzzzz".replace(/[xyz4-]/g,function(c){switch(c){case"x":return(Math.floor(100*Math.random())%16).toString(16);case"y":return"8";case"z":return self.$id.charAt(++z);case"-":case"4":return c}}))},destroy:function($cb){this.getChildren().forEach(function(child){child.isAbstract()||(void 0!==child.matchInterface("Sensor")||void 0!==child.matchInterface("Actuator"))&&child.$owner.removeBehaviour(child)}),$cb()},addBehaviour:function(){var doConnect=!1,obj=this.$super.apply(this,arguments);if(void 0!==obj&&!obj.isAbstract()){if(void 0!==obj.matchInterface("Sensor")&&(obj.subTopic=obj.getName(),void 0!==this.topicRefs[obj.subTopic]?this.topicRefs[obj.subTopic]++:(this.topicRefs[obj.subTopic]=1,this.isConnected?this.doSubscribe(obj.subTopic):(this.pendingSubs[obj.subTopic]=!0,void 0!==this.pendingUnsubs[obj.subTopic]&&delete this.pendingUnsubs[obj.subTopic],doConnect=!0))),void 0!==obj.matchInterface("Actuator")){var flow=obj.getFlow();obj.pubTopic=obj.getName(),obj.getFlow=function(){return flow.concat([function(message,cb){obj.$owner.doSendMessage(obj.pubTopic,message),cb()}])},this.isConnected||(doConnect=!0,$thing.agent(obj)("pause")()),this.actuatorsTotal++}doConnect&&this.doConnect()}return obj},removeBehaviour:function(){var self=this,objs=this.$super.apply(this,arguments);return objs.forEach(function(obj){void 0!==obj.subTopic&&--self.topicRefs[obj.subTopic]<=0&&(delete self.topicRefs[obj.subTopic],void 0!==self.pendingSubs[obj.subTopic]&&delete self.pendingSubs[obj.subTopic],self.isConnected?self.doUnsubscribe(obj.subTopic):self.pendingUnsubs[obj.subTopic]=!0),void 0!==obj.pubTopic&&self.actuatorsTotal--}),this.isActive()||this.doDisconnect(),objs},doConnectWithMqtt:function(){var self=this;this.client=mqtt.connect({host:this.host,port:this.port,clientId:this.clientId,reconnectPeriod:this.reconnectPeriod}),this.client.on("error",function(err){self.onError(err)()}),this.client.on("close",function(){self.onDisconnect(),self.removeBehaviour(self.broker),delete self.broker}),this.client.on("connect",function(){self.broker=self.addBehaviour("@passive",{}),self.onConnect()}),this.client.on("message",function(topic,message){self.onMessageArrived(topic,$thing.createBuffer(message))})},doConnectWithPaho:function(){var self=this;this.client=new Paho.MQTT.Client(this.host,this.port,this.clientId),this.client.onConnectionLost=function(){self.onDisconnect()},this.client.onMessageArrived=function(msg){self.onMessageArrived(msg.destinationName,$thing.createBuffer(msg.payloadBytes))},this.client.onMessageDelivered=function(msg){self.onMessageDelivered(msg.destinationName,$thing.createBuffer(msg.payloadBytes))},this.client.connect({onSuccess:function(){self.onConnect()},onFailure:function(err){self.onError(err)}})},isActive:function(){for(var i in this.pendingSubs)break;for(var j in this.pendingUnsubs)break;for(var k in this.topicRefs)break;return void 0!==i||void 0!==j||void 0!==k||this.actuatorsTotal>0?!0:!1},doConnect:function(){this.isConnecting||(this.isConnecting=!0,this.isConnected=!1,$thing.usePaho?this.doConnectWithPaho():this.doConnectWithMqtt())},doDisconnect:function(){void 0!==this.client&&(this.isConnecting=!1,this.isConnected=!1,$thing.usePaho?this.client.disconnect():this.client.end(),delete this.client)},doReconnect:function(){$thing.usePaho&&this.addBehaviour("@singleton","@period $",this.reconnectPeriod,"extends Waker",{wake:function(cb){this.$super(cb),this.$owner.isConnected?this.$owner.doDisconnect():this.$owner.doConnect()}})},doSubscribe:function(topic){this.client.subscribe(topic)},doUnsubscribe:function(topic){this.client.unsubscribe(topic)},doSendMessage:function(topic,message){var self=this;$thing.usePaho?this.client.send(topic,message,0,!1):this.client.publish(topic,message,{},function(err){err?self.onError(err):self.onMessageDelivered(topic,$thing.createBuffer(message))})},onError:function(err){this.isConnecting=!1,$thing.usePaho&&8===err.errorCode&&this.onDisconnect()},onConnect:function(){this.isConnecting=!1,this.isConnected=!0;for(var i in this.pendingSubs)this.doSubscribe(i);for(var j in this.pendingUnsubs)this.doUnsubscribe(j);this.pendingSubs={},this.pendingUnsubs={};for(var k in this.topicRefs)break;void 0===k&&this.actuatorsTotal<=0?this.doDisconnect():this.getChildren().forEach(function(obj){obj.isAbstract()||void 0===obj.matchInterface("Actuator")||$thing.agent(obj)("resume")()})},onDisconnect:function(){this.isConnecting=!1,this.isConnected=!1,this.actuatorsTotal>0&&this.getChildren().forEach(function(obj){void 0!==obj.matchInterface("Actuator")&&$thing.agent(obj)("pause")()}),this.isActive()&&this.doReconnect()},onMessageArrived:function(topic,message){this.getChildren().forEach(function(obj){obj.isAbstract()||void 0===obj.matchInterface(topic)||(void 0!==obj.matchInterface("Bridge")?$thing.agent("@select $ not owner:$",topic,obj.$owner.$id)("push",message)():void 0!==obj.matchInterface("Sensor")&&$thing.agent(obj)("push",message)())})},onMessageDelivered:function(){}});
//# sourceMappingURL=thingjs-mqtt-0.2.1.min.js.map